;;;; change the prefix key to something else
(set-prefix-key (kbd "C-d"))

;;;; Default terminal emulator
(setq *terminal* "urxvt")

;;;; Default Browser
(setq *browser* "google-chrome")

;;; Lock screen
(defparameter *my-lock-command*
  "xscreensaver-command -lock")
(defcommand lock-screen () ()
  "Lock my screen."
  (run-shell-command *my-lock-command* t))
(run-shell-command "xscreensaver -no-splash")

(setq *proxy*
      (let ((proxy (stumpwm:run-shell-command "echo $http_proxy" t)))
        (if (> (length proxy) 1) (subseq proxy 7 (- (length proxy) 1))
            "")))

(setq google-chrome-shell-cmd
      (concatenate 'string
                   "google-chrome --proxy-server=" *proxy*))
(defcommand google-chrome () ()
  "run google-chrome"
  (run-or-raise google-chrome-shell-cmd '(:class "google-chrome")))

(defcommand firefox () ()
  "run firefox"
  (run-or-raise "firefox" '(:class "Firefox")))

(defcommand urxvt () ()
  "run firefox"
  (run-or-raise "urxvt" '(:class "URxvt")))

(defmacro bind-shell-to-key (key command &optional (map *root-map*))
  `(define-key ,map (kbd ,key) (concatenate 'string
                                            "run-shell-command "
                                            ,command)))
(bind-shell-to-key "D" "deadbeef")
(bind-shell-to-key "M" "sunflower")
(bind-shell-to-key "C-M-z" "goldendict" *top-map*)
(bind-shell-to-key "T" "thunderbird")
(bind-shell-to-key "N" "gnome-nettool")

(define-key *root-map* (kbd "t") "urxvt")
(define-key *root-map* (kbd "G") "google-chrome")
(define-key *root-map* (kbd "F") "firefox")

(define-key *top-map* (kbd "C-M-l") "lock-screen")
(define-key *top-map* (kbd "C-M-e") "emacs")
(define-key *top-map* (kbd "M-Tab") "windowlist")
(define-key *top-map* (kbd "M-Z") "pull-hidden-previous")
(define-key *top-map* (kbd "C-M-Z") "pull-hidden-previous")
(define-key *top-map* (kbd "M-z") "pull-hidden-next")
(define-key *top-map* (kbd "s-SunPageUp") "pull-hidden-next")
(define-key *top-map* (kbd "s-SunPageDown") "pull-hidden-previous")
(define-key *top-map* (kbd "M-F4") "delete")
(define-key *top-map* (kbd "C-F12") "loadrc")
(define-key *top-map* (kbd "C-F11") "restart-hard")

(set-font "-*-terminus-*-*-*-*-18-*-*-*-*-*-iso10646-*")

;; ------------------------------------------------------------
;; Message window

;;;; Message window gravity
;; ; :top-left :top-right :bottom-left :bottom-right :center
 (setq *message-window-gravity* :center)

;;;; Input window gravity
;; ; :top-left :top-right :bottom-left :bottom-right :center
 (setq *input-window-gravity* :center)

(set-bg-color "#F0FFF0")
(set-fg-color "#326B6B")

(set-win-bg-color "#DCDAD5")

;; Set the border color for the message bar and input bar.
(set-border-color "#555555")

;; ------------------------------------------------------------
;; Windows list

(setf *window-format* "%n%s %c (%t)")

;; ------------------------------------------------------------
;; Windows

;;;; Style of window borders
(setf *mouse-focus-policy* :click
      *window-border-style* :thin)

;; Set the border color for focused windows. This is only used when there is
;; more than one frame.
(set-focus-color "#555555")
(set-unfocus-color "#999999")

;; ------------------------------------------------------------
;; modeline
(setf *mode-line-timeout* 60)

(setf *mode-line-position* :bottom)

(setf *mode-line-background-color* "#DCDAD5")
(setf *mode-line-foreground-color* "#222222")
(setf *mode-line-border-width* 1)
(setf *mode-line-border-color* "#DCDAD5")

(setf stumpwm:*screen-mode-line-format*
      (list "^>"
            '(:eval (stumpwm:run-shell-command "date" t))))

(stumpwm:enable-mode-line (stumpwm:current-screen)
                          (stumpwm:current-head)
                          t)

;;
;; ------------------------------------------------------------
